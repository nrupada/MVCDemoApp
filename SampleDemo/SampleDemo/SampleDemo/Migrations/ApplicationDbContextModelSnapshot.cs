// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SampleDemo.Data;

#nullable disable

namespace SampleDemo.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SampleDemo.Entities.Classroom", b =>
                {
                    b.Property<int>("ClassroomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassroomId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClassroomId");

                    b.ToTable("Classrooms");

                    b.HasData(
                        new
                        {
                            ClassroomId = 1,
                            Name = "Math A"
                        },
                        new
                        {
                            ClassroomId = 2,
                            Name = "Math B"
                        },
                        new
                        {
                            ClassroomId = 3,
                            Name = "Math C"
                        },
                        new
                        {
                            ClassroomId = 4,
                            Name = "Math D"
                        },
                        new
                        {
                            ClassroomId = 5,
                            Name = "Math E"
                        });
                });

            modelBuilder.Entity("SampleDemo.Entities.ClassroomStudent", b =>
                {
                    b.Property<int>("ClassroomStudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassroomStudentId"), 1L, 1);

                    b.Property<int?>("ClassroomId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("ClassroomStudentId");

                    b.HasIndex("ClassroomId");

                    b.HasIndex("StudentId");

                    b.ToTable("ClassroomStudents");

                    b.HasData(
                        new
                        {
                            ClassroomStudentId = 1,
                            ClassroomId = 1,
                            StudentId = 1
                        },
                        new
                        {
                            ClassroomStudentId = 2,
                            ClassroomId = 1,
                            StudentId = 2
                        },
                        new
                        {
                            ClassroomStudentId = 3,
                            ClassroomId = 1,
                            StudentId = 3
                        },
                        new
                        {
                            ClassroomStudentId = 4,
                            ClassroomId = 1,
                            StudentId = 4
                        },
                        new
                        {
                            ClassroomStudentId = 5,
                            ClassroomId = 1,
                            StudentId = 5
                        });
                });

            modelBuilder.Entity("SampleDemo.Entities.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            Name = "Bob"
                        },
                        new
                        {
                            StudentId = 2,
                            Name = "James"
                        },
                        new
                        {
                            StudentId = 3,
                            Name = "Beth"
                        },
                        new
                        {
                            StudentId = 4,
                            Name = "Sam"
                        },
                        new
                        {
                            StudentId = 5,
                            Name = "Jen"
                        });
                });

            modelBuilder.Entity("SampleDemo.Entities.ClassroomStudent", b =>
                {
                    b.HasOne("SampleDemo.Entities.Classroom", "Classroom")
                        .WithMany()
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SampleDemo.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classroom");

                    b.Navigation("Student");
                });
#pragma warning restore 612, 618
        }
    }
}
